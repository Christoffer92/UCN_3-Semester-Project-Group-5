//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolvrServiceConsoleApp.RemoteSolvrReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SolvrServiceConsoleApp.RemoteSolvrReference.PhysicalPost))]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BumpTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BumpTime {
            get {
                return this.BumpTimeField;
            }
            set {
                if ((this.BumpTimeField.Equals(value) != true)) {
                    this.BumpTimeField = value;
                    this.RaisePropertyChanged("BumpTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostType {
            get {
                return this.PostTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostTypeField, value) != true)) {
                    this.PostTypeField = value;
                    this.RaisePropertyChanged("PostType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalPost", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class PhysicalPost : SolvrServiceConsoleApp.RemoteSolvrReference.Post {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AltDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AltDescription {
            get {
                return this.AltDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AltDescriptionField, value) != true)) {
                    this.AltDescriptionField = value;
                    this.RaisePropertyChanged("AltDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SolvrServiceConsoleApp.RemoteSolvrReference.SolvrComment))]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Vote[] VotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentType {
            get {
                return this.CommentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTypeField, value) != true)) {
                    this.CommentTypeField = value;
                    this.RaisePropertyChanged("CommentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Vote[] Votes {
            get {
                return this.VotesField;
            }
            set {
                if ((object.ReferenceEquals(this.VotesField, value) != true)) {
                    this.VotesField = value;
                    this.RaisePropertyChanged("Votes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SolvrComment", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class SolvrComment : SolvrServiceConsoleApp.RemoteSolvrReference.Comment {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeAcceptedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccepted {
            get {
                return this.IsAcceptedField;
            }
            set {
                if ((this.IsAcceptedField.Equals(value) != true)) {
                    this.IsAcceptedField = value;
                    this.RaisePropertyChanged("IsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeAccepted {
            get {
                return this.TimeAcceptedField;
            }
            set {
                if ((this.TimeAcceptedField.Equals(value) != true)) {
                    this.TimeAcceptedField = value;
                    this.RaisePropertyChanged("TimeAccepted");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vote", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class Vote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Comment CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUpvotedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUpvoted {
            get {
                return this.IsUpvotedField;
            }
            set {
                if ((this.IsUpvotedField.Equals(value) != true)) {
                    this.IsUpvotedField = value;
                    this.RaisePropertyChanged("IsUpvoted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/SolvrLibrary")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Comment CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsResolvedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SolvrServiceConsoleApp.RemoteSolvrReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsResolved {
            get {
                return this.IsResolvedField;
            }
            set {
                if ((this.IsResolvedField.Equals(value) != true)) {
                    this.IsResolvedField = value;
                    this.RaisePropertyChanged("IsResolved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportType {
            get {
                return this.ReportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeField, value) != true)) {
                    this.ReportTypeField = value;
                    this.RaisePropertyChanged("ReportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolvrServiceConsoleApp.RemoteSolvrReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteSolvrReference.ISolvrServices")]
    public interface ISolvrServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/IsConnectedToDatabase", ReplyAction="http://tempuri.org/ISolvrServices/IsConnectedToDatabaseResponse")]
        bool IsConnectedToDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/IsConnectedToDatabase", ReplyAction="http://tempuri.org/ISolvrServices/IsConnectedToDatabaseResponse")]
        System.Threading.Tasks.Task<bool> IsConnectedToDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetUser", ReplyAction="http://tempuri.org/ISolvrServices/GetUserResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.User GetUser(int id, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetUser", ReplyAction="http://tempuri.org/ISolvrServices/GetUserResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.User> GetUserAsync(int id, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetPost", ReplyAction="http://tempuri.org/ISolvrServices/GetPostResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Post GetPost(int id, bool withUsers, bool withComments, bool notDisabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetPost", ReplyAction="http://tempuri.org/ISolvrServices/GetPostResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> GetPostAsync(int id, bool withUsers, bool withComments, bool notDisabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetComment", ReplyAction="http://tempuri.org/ISolvrServices/GetCommentResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Comment GetComment(int id, bool withUser, bool withVotes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetComment", ReplyAction="http://tempuri.org/ISolvrServices/GetCommentResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> GetCommentAsync(int id, bool withUser, bool withVotes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCategory", ReplyAction="http://tempuri.org/ISolvrServices/GetCategoryResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Category GetCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCategory", ReplyAction="http://tempuri.org/ISolvrServices/GetCategoryResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Category> GetCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetReport", ReplyAction="http://tempuri.org/ISolvrServices/GetReportResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Report GetReport(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetReport", ReplyAction="http://tempuri.org/ISolvrServices/GetReportResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> GetReportAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetPostList", ReplyAction="http://tempuri.org/ISolvrServices/GetPostListResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Post[] GetPostList(int offSet, int loadCount, bool withUsers, bool withComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetPostList", ReplyAction="http://tempuri.org/ISolvrServices/GetPostListResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post[]> GetPostListAsync(int offSet, int loadCount, bool withUsers, bool withComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCommentList", ReplyAction="http://tempuri.org/ISolvrServices/GetCommentListResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Comment[] GetCommentList(int postId, bool withUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCommentList", ReplyAction="http://tempuri.org/ISolvrServices/GetCommentListResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment[]> GetCommentListAsync(int postId, bool withUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCategoryList", ReplyAction="http://tempuri.org/ISolvrServices/GetCategoryListResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Category[] GetCategoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetCategoryList", ReplyAction="http://tempuri.org/ISolvrServices/GetCategoryListResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Category[]> GetCategoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetReportList", ReplyAction="http://tempuri.org/ISolvrServices/GetReportListResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Report[] GetReportList(bool onlyNotResolved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetReportList", ReplyAction="http://tempuri.org/ISolvrServices/GetReportListResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report[]> GetReportListAsync(bool onlyNotResolved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetVoteList", ReplyAction="http://tempuri.org/ISolvrServices/GetVoteListResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Vote[] GetVoteList(int commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/GetVoteList", ReplyAction="http://tempuri.org/ISolvrServices/GetVoteListResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Vote[]> GetVoteListAsync(int commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateUser", ReplyAction="http://tempuri.org/ISolvrServices/CreateUserResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.User CreateUser(SolvrServiceConsoleApp.RemoteSolvrReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateUser", ReplyAction="http://tempuri.org/ISolvrServices/CreateUserResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.User> CreateUserAsync(SolvrServiceConsoleApp.RemoteSolvrReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreatePost", ReplyAction="http://tempuri.org/ISolvrServices/CreatePostResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Post CreatePost(SolvrServiceConsoleApp.RemoteSolvrReference.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreatePost", ReplyAction="http://tempuri.org/ISolvrServices/CreatePostResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> CreatePostAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateComment", ReplyAction="http://tempuri.org/ISolvrServices/CreateCommentResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Comment CreateComment(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateComment", ReplyAction="http://tempuri.org/ISolvrServices/CreateCommentResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> CreateCommentAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateReport", ReplyAction="http://tempuri.org/ISolvrServices/CreateReportResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Report CreateReport(SolvrServiceConsoleApp.RemoteSolvrReference.Report report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/CreateReport", ReplyAction="http://tempuri.org/ISolvrServices/CreateReportResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> CreateReportAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Report report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdatePost", ReplyAction="http://tempuri.org/ISolvrServices/UpdatePostResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Post UpdatePost(SolvrServiceConsoleApp.RemoteSolvrReference.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdatePost", ReplyAction="http://tempuri.org/ISolvrServices/UpdatePostResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> UpdatePostAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdateComment", ReplyAction="http://tempuri.org/ISolvrServices/UpdateCommentResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Comment UpdateComment(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdateComment", ReplyAction="http://tempuri.org/ISolvrServices/UpdateCommentResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> UpdateCommentAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdateReport", ReplyAction="http://tempuri.org/ISolvrServices/UpdateReportResponse")]
        SolvrServiceConsoleApp.RemoteSolvrReference.Report UpdateReport(SolvrServiceConsoleApp.RemoteSolvrReference.Report report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISolvrServices/UpdateReport", ReplyAction="http://tempuri.org/ISolvrServices/UpdateReportResponse")]
        System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> UpdateReportAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Report report);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISolvrServicesChannel : SolvrServiceConsoleApp.RemoteSolvrReference.ISolvrServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SolvrServicesClient : System.ServiceModel.ClientBase<SolvrServiceConsoleApp.RemoteSolvrReference.ISolvrServices>, SolvrServiceConsoleApp.RemoteSolvrReference.ISolvrServices {
        
        public SolvrServicesClient() {
        }
        
        public SolvrServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SolvrServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SolvrServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SolvrServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsConnectedToDatabase() {
            return base.Channel.IsConnectedToDatabase();
        }
        
        public System.Threading.Tasks.Task<bool> IsConnectedToDatabaseAsync() {
            return base.Channel.IsConnectedToDatabaseAsync();
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.User GetUser(int id, string username) {
            return base.Channel.GetUser(id, username);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.User> GetUserAsync(int id, string username) {
            return base.Channel.GetUserAsync(id, username);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Post GetPost(int id, bool withUsers, bool withComments, bool notDisabled) {
            return base.Channel.GetPost(id, withUsers, withComments, notDisabled);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> GetPostAsync(int id, bool withUsers, bool withComments, bool notDisabled) {
            return base.Channel.GetPostAsync(id, withUsers, withComments, notDisabled);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment GetComment(int id, bool withUser, bool withVotes) {
            return base.Channel.GetComment(id, withUser, withVotes);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> GetCommentAsync(int id, bool withUser, bool withVotes) {
            return base.Channel.GetCommentAsync(id, withUser, withVotes);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Category GetCategory(int id) {
            return base.Channel.GetCategory(id);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Category> GetCategoryAsync(int id) {
            return base.Channel.GetCategoryAsync(id);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Report GetReport(int id) {
            return base.Channel.GetReport(id);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> GetReportAsync(int id) {
            return base.Channel.GetReportAsync(id);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Post[] GetPostList(int offSet, int loadCount, bool withUsers, bool withComments) {
            return base.Channel.GetPostList(offSet, loadCount, withUsers, withComments);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post[]> GetPostListAsync(int offSet, int loadCount, bool withUsers, bool withComments) {
            return base.Channel.GetPostListAsync(offSet, loadCount, withUsers, withComments);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment[] GetCommentList(int postId, bool withUsers) {
            return base.Channel.GetCommentList(postId, withUsers);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment[]> GetCommentListAsync(int postId, bool withUsers) {
            return base.Channel.GetCommentListAsync(postId, withUsers);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Category[] GetCategoryList() {
            return base.Channel.GetCategoryList();
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Category[]> GetCategoryListAsync() {
            return base.Channel.GetCategoryListAsync();
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Report[] GetReportList(bool onlyNotResolved) {
            return base.Channel.GetReportList(onlyNotResolved);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report[]> GetReportListAsync(bool onlyNotResolved) {
            return base.Channel.GetReportListAsync(onlyNotResolved);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Vote[] GetVoteList(int commentId) {
            return base.Channel.GetVoteList(commentId);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Vote[]> GetVoteListAsync(int commentId) {
            return base.Channel.GetVoteListAsync(commentId);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.User CreateUser(SolvrServiceConsoleApp.RemoteSolvrReference.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.User> CreateUserAsync(SolvrServiceConsoleApp.RemoteSolvrReference.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Post CreatePost(SolvrServiceConsoleApp.RemoteSolvrReference.Post post) {
            return base.Channel.CreatePost(post);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> CreatePostAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Post post) {
            return base.Channel.CreatePostAsync(post);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment CreateComment(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment) {
            return base.Channel.CreateComment(comment);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> CreateCommentAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment) {
            return base.Channel.CreateCommentAsync(comment);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Report CreateReport(SolvrServiceConsoleApp.RemoteSolvrReference.Report report) {
            return base.Channel.CreateReport(report);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> CreateReportAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Report report) {
            return base.Channel.CreateReportAsync(report);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Post UpdatePost(SolvrServiceConsoleApp.RemoteSolvrReference.Post post) {
            return base.Channel.UpdatePost(post);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Post> UpdatePostAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Post post) {
            return base.Channel.UpdatePostAsync(post);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Comment UpdateComment(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment) {
            return base.Channel.UpdateComment(comment);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Comment> UpdateCommentAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Comment comment) {
            return base.Channel.UpdateCommentAsync(comment);
        }
        
        public SolvrServiceConsoleApp.RemoteSolvrReference.Report UpdateReport(SolvrServiceConsoleApp.RemoteSolvrReference.Report report) {
            return base.Channel.UpdateReport(report);
        }
        
        public System.Threading.Tasks.Task<SolvrServiceConsoleApp.RemoteSolvrReference.Report> UpdateReportAsync(SolvrServiceConsoleApp.RemoteSolvrReference.Report report) {
            return base.Channel.UpdateReportAsync(report);
        }
    }
}
